{"ast":null,"code":"var _jsxFileName = \"/Users/justdial/Desktop/JustDial/typescript-react/src/components/TodoCard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { AiFillDelete, AiFillEdit, AiOutlineFileDone } from 'react-icons/ai';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoCard = _ref => {\n  _s();\n  let {\n    element,\n    todos,\n    setTodos\n  } = _ref;\n  const [edit, setEdit] = useState(false);\n  const [editTodo, setEditTodo] = useState(element.todo);\n  const inputRef = useRef(null);\n\n  // * Function to mark done todo * //\n  const handleDone = id => {\n    const updatedTodos = todos.map(todo => todo.id === id ? {\n      ...todo,\n      isDone: !todo.isDone\n    } : todo);\n    setTodos(updatedTodos);\n  };\n  // * Function to delet todo * //\n  const handleDelet = id => {\n    const updatedTodos = todos.filter(todo => todo.id !== id);\n    setTodos(updatedTodos);\n  };\n\n  // * Function to submit the edited todo * //\n  const handleEdiit = (e, id) => {\n    e.preventDefault();\n    const updatedTodos = todos.map(todo => todo.id === id ? {\n      ...todo,\n      todo: editTodo\n    } : todo);\n    setTodos(updatedTodos);\n    setEdit(false);\n  };\n\n  // * focus the edit input when user clicks on edit * //\n  useEffect(() => {\n    var _inputRef$current;\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  }, [edit]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todos__single\",\n    onSubmit: e => handleEdiit(e, element.id),\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [(() => {\n        if (edit) {\n          return /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: inputRef,\n            value: editTodo,\n            type: \"input\",\n            onChange: e => setEditTodo(e.target.value),\n            className: \"todos__single--text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this);\n        } else if (element.isDone) {\n          /*#__PURE__*/_jsxDEV(\"s\", {\n            className: \"todos__single--text\",\n            children: element.todo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"todos__single--text\",\n          children: element.todo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 18\n        }, this);\n      })(), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"icon\",\n          onClick: () => {\n            if (!edit && !element.isDone) {\n              setEdit(!edit);\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(AiFillEdit, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"icon\",\n          onClick: () => handleDelet(element.id),\n          children: /*#__PURE__*/_jsxDEV(AiFillDelete, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"icon\",\n          onClick: () => handleDone(element.id),\n          children: /*#__PURE__*/_jsxDEV(AiOutlineFileDone, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoCard, \"AZJ6ejYfy+Putc468Uuygqbggc0=\");\n_c = TodoCard;\nexport default TodoCard;\nvar _c;\n$RefreshReg$(_c, \"TodoCard\");","map":{"version":3,"names":["React","useState","useRef","useEffect","AiFillDelete","AiFillEdit","AiOutlineFileDone","TodoCard","element","todos","setTodos","edit","setEdit","editTodo","setEditTodo","todo","inputRef","handleDone","id","updatedTodos","map","isDone","handleDelet","filter","handleEdiit","e","preventDefault","current","focus","target","value"],"sources":["/Users/justdial/Desktop/JustDial/typescript-react/src/components/TodoCard.tsx"],"sourcesContent":["import React, { FC, useState, useRef, useEffect } from 'react';\nimport { Todo } from '../model';\nimport { AiFillDelete, AiFillEdit, AiOutlineFileDone } from 'react-icons/ai';\nimport './styles.css';\n\ntype Props = {\n  element: Todo;\n  todos: Todo[];\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n};\nconst TodoCard: FC<Props> = ({ element, todos, setTodos }) => {\n  const [edit, setEdit] = useState(false);\n  const [editTodo, setEditTodo] = useState(element.todo);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  // * Function to mark done todo * //\n  const handleDone = (id: number) => {\n    const updatedTodos = todos.map((todo) =>\n      todo.id === id ? { ...todo, isDone: !todo.isDone } : todo\n    );\n    setTodos(updatedTodos);\n  };\n  // * Function to delet todo * //\n  const handleDelet = (id: number) => {\n    const updatedTodos = todos.filter((todo) => todo.id !== id);\n    setTodos(updatedTodos);\n  };\n\n  // * Function to submit the edited todo * //\n  const handleEdiit = (e: React.FormEvent, id: number) => {\n    e.preventDefault();\n    const updatedTodos = todos.map((todo) =>\n      todo.id === id ? { ...todo, todo: editTodo } : todo\n    );\n    setTodos(updatedTodos);\n    setEdit(false);\n  };\n\n  // * focus the edit input when user clicks on edit * //\n  useEffect(() => {\n    inputRef.current?.focus();\n  }, [edit]);\n\n  return (\n    <form\n      className=\"todos__single\"\n      onSubmit={(e) => handleEdiit(e, element.id)}\n    >\n      <>\n        {(() => {\n          if (edit) {\n            return (\n              <input\n                ref={inputRef}\n                value={editTodo}\n                type=\"input\"\n                onChange={(e) => setEditTodo(e.target.value)}\n                className=\"todos__single--text\"\n              />\n            );\n          } else if (element.isDone) {\n            <s className=\"todos__single--text\">{element.todo}</s>;\n          }\n          return <span className=\"todos__single--text\">{element.todo}</span>;\n        })()}\n        <div>\n          <span\n            className=\"icon\"\n            onClick={() => {\n              if (!edit && !element.isDone) {\n                setEdit(!edit);\n              }\n            }}\n          >\n            <AiFillEdit />\n          </span>\n          <span className=\"icon\" onClick={() => handleDelet(element.id)}>\n            <AiFillDelete />\n          </span>\n          <span className=\"icon\" onClick={() => handleDone(element.id)}>\n            <AiOutlineFileDone />\n          </span>\n        </div>\n      </>\n    </form>\n  );\n};\n\nexport default TodoCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}